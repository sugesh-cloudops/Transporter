apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app
  labels:
    app: springboot-app
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      serviceAccountName: my-app-sa
      containers:
        - name: springboot-app
          image: {{ .Values.app.image }}
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_APPLICATION_NAME
              value: {{ .Values.app.name }}
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql-0.mysql-headless:3306/{{ .Values.mysql.database }}?createDatabaseIfNotExist=true
            - name: SPRING_DATASOURCE_WRITER_URL
              value: jdbc:mysql://mysql-0.mysql-headless:3306/{{ .Values.mysql.database }}?createDatabaseIfNotExist=true
            - name: ACTUATOR_ENDPOINTS
              value: health,info,prometheus
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10